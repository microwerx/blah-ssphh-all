# Render Configuration File for Fluxions Renderer

@DEFAULTWIDTH 1024
@DEFAULTHEIGHT 1024
@SCREENWIDTH 1280
@SCREENHEIGHT 720

# ==== Paths ====

path ./
path ../shaders/
path ../textures/

# ==== Samplers =====

sampler default2dSampler
sampler GL_TEXTURE_WRAP_S GL_REPEAT
sampler GL_TEXTURE_WRAP_T GL_REPEAT
sampler GL_TEXTURE_MIN_FILTER GL_LINEAR_MIPMAP_LINEAR
sampler GL_TEXTURE_MAG_FILTER GL_LINEAR

sampler defaultShadowSampler
sampler GL_TEXTURE_WRAP_S GL_REPEAT
sampler GL_TEXTURE_WRAP_T GL_REPEAT
sampler GL_TEXTURE_MIN_FILTER GL_LINEAR
sampler GL_TEXTURE_MAG_FILTER GL_LINEAR

sampler defaultCubeSampler
sampler GL_TEXTURE_WRAP_S GL_CLAMP_TO_EDGE
sampler GL_TEXTURE_WRAP_T GL_CLAMP_TO_EDGE
sampler GL_TEXTURE_WRAP_R GL_CLAMP_TO_EDGE
sampler GL_TEXTURE_MIN_FILTER GL_LINEAR_MIPMAP_LINEAR
sampler GL_TEXTURE_MAG_FILTER GL_LINEAR

# ==== Textures ====

texture2D test2d
texture2D sampler default2dSampler
texture2D uniform MapKd
texture2D map "test_texture_2d.png"
# texture2D map stpeters_probe.pfm

texture2D coronaGroundTruth
texture2D sampler default2dSampler
texture2D uniform MapBlendReference
texture2D map "corona_output/corona_ground_truth.exr"
texture2D alwaysLoad

#textureCube pbskyEXR
#textureCube map "test_corona_skymap.exr"
#textureCube uniform MapEnviroCube
#textureCube sampler defaultCubeSampler

#textureCube pbskyPPM
#textureCube map "test_corona_skymap.ppm"
#textureCube uniform MapEnviroCube
#textureCube sampler defaultCubeSampler

#textureCube enviroSkyBox
#textureCube map "grace_cross.pfm"
#textureCube uniform MapEnviroCube
#textureCube sampler defaultCubeSampler

#textureCube grace_cross
#textureCube map "grace_cross.pfm"
#textureCube uniform MapEnviroCube
#textureCube sampler defaultCubeSampler

textureCube enviroSkyCube
# textureCube map test_corona_cube.exr
# textureCube map galileo_cross.exr
# textureCube map mwpan2_cubemap.exr
textureCube map "corona_output/ssphh_sky.exr"
textureCube uniform MapEnviroCube
textureCube sampler defaultCubeSampler
textureCube alwaysLoad

# ==== Programs ====

# program zonly_program
# vertshader zonly.vert
# fragshader zonly.frag
# vertattrib 0 aPosition

program pbr_program
vertshader basic_gles30.vert
fragshader basic_gles30.frag

program viz_program
vertshader basic_gles30.vert
fragshader basic_gles30.frag

# program sphl_program
# vertshader sphl300.vert
# fragshader sphl300.frag
# vertattrib 0 aPosition
# vertattrib 1 aNormal
# vertattrib 2 aTexCoord

program skybox_program
vertshader skybox.vert
fragshader skybox.frag
vertattrib 0 aPosition
vertattrib 1 aNormal
vertattrib 2 aTexCoord

# program UnwrappedCubeMap
# vertshader glut_unwrapped_cubemap.vert
# fragshader glut_unwrapped_cubemap.frag
# vertattrib 0 aPosition
# vertattrib 1 aTexCoord

# program cube_shadow
# vertshader cube_shadow_gl330.vert
# geomshader cube_shadow_gl330.geom
# fragshader cube_shadow_gl330.frag
# vertattrib 0 aPosition

program postprocess_program
vertshader postprocess.vert
fragshader postprocess.frag

# ==== Framebuffers ====

# fbo sunShadow
# fbo dimensions @DEFAULTWIDTH @DEFAULTHEIGHT
# fbo attach GL_TEXTURE_2D GL_DEPTH_ATTACHMENT  GL_DEPTH_COMPONENT32F MapSunShadow
# fbo attach GL_TEXTURE_2D GL_COLOR_ATTACHMENT0 GL_RGBA32F            MapSunColor

# fbo moonShadow
# fbo dimensions 512 512
# fbo attach GL_TEXTURE_2D GL_DEPTH_ATTACHMENT  GL_DEPTH_COMPONENT16  MapMoonShadow
# fbo attach GL_TEXTURE_2D GL_COLOR_ATTACHMENT0 GL_RGBA32F            MapMoonColor

# `linear_fbo` is used to render the final image. We lay down the skybox first
# and then draw the scene on top of it followed by any visualization graphics.
# This is used as input to the post processing shader for gamma adjustment. The
# ImGui is drawn last on the screen.
fbo linear_fbo
fbo dimensions @DEFAULTWIDTH @DEFAULTHEIGHT
fbo attach GL_TEXTURE_2D GL_DEPTH_ATTACHMENT  GL_DEPTH_COMPONENT16  MapDepthBuffer
fbo attach GL_TEXTURE_2D GL_COLOR_ATTACHMENT0 GL_RGBA16F            MapColorBuffer
fbo autoresize

# ==== Render Configurations ====

# renderconfig sunShadow
# renderconfig writefbo sunShadow
# renderconfig program zonly
# renderconfig camera sunInverseTransform
# renderconfig projection orthoSquare

# renderconfig moonShadow
# renderconfig writefbo moonShadow
# renderconfig program zonly
# renderconfig camera moonInverseTransform
# renderconfig projection orthoSquare


#
# Sky Shader
#
# Renders to `linear_fbo`
# No depth test
# 120 degree FOV
# autoresizes to screen resolution

renderconfig skybox_rc
renderconfig program skybox_program
renderconfig writefbo linear_fbo
renderconfig textureCube enviroSkyCube MapEnviroCube
renderconfig clearcolor 1.0 0.0 1.0 1.0
# renderconfig viewport 0 256 512 512
renderconfig perspective 120 1 100
renderconfig autoresize
renderconfig draw skybox
# renderconfig pretransform 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
# renderconfig posttransform 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
# renderconfig camera default


#
# Physically Based Rendering Shader
#
# Renders to `linear_fbo`
# clears depth buffer
# LEQUAL depth test
# 120 degree FOV
# autoresizes to screen resolution

renderconfig pbr_rc
renderconfig program pbr_program
renderconfig writefbo linear_fbo
# renderconfig readfbo sunShadow
# renderconfig readfbo moonShadow
renderconfig viewport 0 0 1024 1024
renderconfig autoresize
renderconfig perspective 120 1 100
renderconfig depthtest GL_LEQUAL
# renderconfig camera default
renderconfig cleardepth
renderconfig texture2D test2d MapKd
renderconfig draw scene

#
# Visualization Shader
#
# Renders to `linear_fbo`
# LEQUAL depth test
# Uses 120 degree FOV
# autoresizes to screen resolution

renderconfig viz_rc
renderconfig program viz_program
renderconfig writefbo linear_fbo
renderconfig autoresize
renderconfig perspective 120 1 100
renderconfig depthtest GL_LEQUAL
renderconfig draw viz

# renderconfig sphl_rc
# renderconfig program sphl_program
# # renderconfig writefbo linear_fbo
# renderconfig viewport @SCREENWIDTH @SCREENHEIGHT
# renderconfig camera default

# 
# POST Processing Filter
#
# Reads from `linear_fbo`
# Writes to screen
# autoresizes to screen resolution
# reads from coronaGroundTruth texture for the reference image

renderconfig postprocess_rc
renderconfig program postprocess_program
renderconfig readfbo linear_fbo
renderconfig autoresize
renderconfig texture2D test2d            MapBlendFadeImage
renderconfig texture2D coronaGroundTruth MapBlendReference
renderconfig draw post
renderconfig srgb


# ==== UniformLists ====


uniformlist defaultCamera
uniformMatrix4f cameraMatrix @CAMERAMATRIX
uniformMatrix4f shadowMatrix @SHADOWMATRIX
uniformMatrix4f sunMatrix @SUNMATRIX


# ==== Renderers ====


# renderer gles30Shadow
# renderer renderconfig zonly

# renderer gles30CubeMap
# renderer renderconfig 

renderer skybox
renderer renderconfig skybox_rc
renderer skybox enviroSkyCube
# in the future, we could specify pbsky to use built in one
# renderer skybox pbsky
# renderer skybox coronasky

renderer pbr
renderer renderconfig pbr_rc

renderer viz
renderer renderconfig viz_rc

# renderer sphl
# renderer renderconfig sphl_rc

renderer postprocess
renderer renderconfig postprocess_rc

# ==== Render Commands ====

debug clearscreen
