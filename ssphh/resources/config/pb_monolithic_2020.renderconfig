# Render Configuration File for Fluxions Renderer

@DEFAULTWIDTH 1024
@DEFAULTHEIGHT 1024

# ==== Paths ====

path ./
path ../shaders/
path ../textures/

# ==== Samplers =====

sampler default2dSampler
sampler GL_TEXTURE_WRAP_S GL_REPEAT
sampler GL_TEXTURE_WRAP_T GL_REPEAT
sampler GL_TEXTURE_MIN_FILTER GL_LINEAR_MIPMAP_LINEAR
sampler GL_TEXTURE_MAG_FILTER GL_LINEAR

sampler defaultShadowSampler
sampler GL_TEXTURE_WRAP_S GL_REPEAT
sampler GL_TEXTURE_WRAP_T GL_REPEAT
sampler GL_TEXTURE_MIN_FILTER GL_LINEAR
sampler GL_TEXTURE_MAG_FILTER GL_LINEAR

sampler defaultCubeSampler
sampler GL_TEXTURE_WRAP_S GL_CLAMP_TO_EDGE
sampler GL_TEXTURE_WRAP_T GL_CLAMP_TO_EDGE
sampler GL_TEXTURE_WRAP_R GL_CLAMP_TO_EDGE
sampler GL_TEXTURE_MIN_FILTER GL_LINEAR_MIPMAP_LINEAR
sampler GL_TEXTURE_MAG_FILTER GL_LINEAR

# ==== Textures ====

#texture2D test2d
#texture2D sampler default2dSampler
#texture2D uniform MapKd
#texture2D map "test_texture_2d.png"

#textureCube pbskyEXR
#textureCube map "test_corona_skymap.exr"
#textureCube uniform MapEnviroCube
#textureCube sampler defaultCubeSampler

#textureCube pbskyPPM
#textureCube map "test_corona_skymap.ppm"
#textureCube uniform MapEnviroCube
#textureCube sampler defaultCubeSampler

#textureCube enviroSkyBox
#textureCube map "grace_cross.pfm"
#textureCube uniform MapEnviroCube
#textureCube sampler defaultCubeSampler

#textureCube grace_cross
#textureCube map "grace_cross.pfm"
#textureCube uniform MapEnviroCube
#textureCube sampler defaultCubeSampler

textureCube enviroSkyBox
textureCube map stpeters_cross.pfm
textureCube uniform MapEnviroCube
textureCube sampler defaultCubeSampler

# ==== Programs ====

program zonly_program
vertshader zonly.vert
fragshader zonly.frag
vertattrib 0 aPosition

program pbr_program
vertshader gles30.vert
fragshader gles30.frag
vertattrib 0 aPosition
vertattrib 1 aNormal
vertattrib 2 aTexCoord
vertattrib 3 aColor
vertattrib 4 aAttrib

program sphl_program
vertshader sphl300.vert
fragshader sphl300.frag
vertattrib 0 aPosition
vertattrib 1 aNormal
vertattrib 2 aTexCoord

program skybox_program
vertshader skybox.vert
fragshader skybox.frag
vertattrib 0 aPosition
vertattrib 1 aNormal
vertattrib 2 aTexCoord

program UnwrappedCubeMap
vertshader glut_unwrapped_cubemap.vert
fragshader glut_unwrapped_cubemap.frag
vertattrib 0 aPosition
vertattrib 1 aTexCoord

program cube_shadow
vertshader cube_shadow_gl330.vert
geomshader cube_shadow_gl330.geom
fragshader cube_shadow_gl330.frag
vertattrib 0 aPosition

# ==== Framebuffers ====

fbo sunShadow
fbo dimensions @DEFAULTWIDTH @DEFAULTHEIGHT
fbo attach GL_TEXTURE_2D GL_DEPTH_ATTACHMENT  GL_DEPTH_COMPONENT32F MapSunShadow
fbo attach GL_TEXTURE_2D GL_COLOR_ATTACHMENT0 GL_RGBA32F            MapSunColor

fbo moonShadow
fbo dimensions 512 512
fbo attach GL_TEXTURE_2D GL_DEPTH_ATTACHMENT  GL_DEPTH_COMPONENT16  MapMoonShadow
fbo attach GL_TEXTURE_2D GL_COLOR_ATTACHMENT0 GL_RGBA32F            MapMoonColor

# `linearfbo` is used to render the final image. We lay down the skybox first
# and then draw the scene on top of it followed by any visualization graphics.
# This is used as input to the post processing shader for gamma adjustment. The
# ImGui is drawn last on the screen.
fbo linear_fbo
fbo dimensions @SCREENWIDTH @SCREENHEIGHT
fbo attach GL_TEXTURE_2D GL_DEPTH_ATTACHMENT  GL_DEPTH_COMPONENT32F MapDepthBuffer
fbo attach GL_TEXTURE_2D GL_COLOR_ATTACHMENT0 GL_RGBA32F            MapColorBuffer

# ==== Render Configurations ====

renderconfig sunShadow
renderconfig writefbo sunShadow
renderconfig program zonly
renderconfig camera sunInverseTransform
renderconfig projection orthoSquare

renderconfig moonShadow
renderconfig writefbo moonShadow
renderconfig program zonly
renderconfig camera moonInverseTransform
renderconfig projection orthoSquare

# this render config is for drawing the skybox
renderconfig skybox_rc
renderconfig program skybox_program
renderconfig clearcolor 1.0 0.0 1.0 1.0
renderconfig viewport 2048 1536
renderconfig perspective 120 1 100
# renderconfig camera default

renderconfig pbr_rc
renderconfig program pbr_program
# renderconfig writefbo linear_fbo
renderconfig readfbo sunShadow
renderconfig readfbo moonShadow
renderconfig camera default
renderconfig clearcolor 1.0 0.0 1.0 1.0

renderconfig sphl_rc
renderconfig program sphl_program
# renderconfig writefbo linear_fbo
renderconfig viewport @SCREENWIDTH @SCREENHEIGHT
renderconfig camera default

renderconfig postprocess_rc
renderconfig program postprocess_program
renderconfig readfbo linearfbo
renderconfig viewport @SCREENWIDTH @SCREENHEIGHT

# ==== UniformLists ====

uniformlist defaultCamera
uniformMatrix4f cameraMatrix @CAMERAMATRIX
uniformMatrix4f shadowMatrix @SHADOWMATRIX
uniformMatrix4f sunMatrix @SUNMATRIX

# ==== Renderers ====

renderer gles30Shadow
renderer renderconfig zonly

renderer gles30CubeMap
renderer renderconfig 

renderer skybox
renderer renderconfig skybox_rc
renderer skybox enviroSkyCube
# in the future, we could specify pbsky to use built in one
# renderer skybox pbsky
# renderer skybox coronasky

renderer pbr
renderer renderconfig pbr_rc

renderer sphl
renderer renderconfig sphl_rc

renderer postprocess
renderer renderconfig postprocess_rc

# ==== Render Commands ====

